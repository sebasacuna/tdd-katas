plugins {
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.0"
}

group 'org.practice'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

sonarqube {
    properties {

        properties {
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.host.url", "https://sonarcloud.io"
            property "sonar.projectKey","sebasacuna_tdd-katas"
            property "sonar.projectName", "tdd-katas"
            property "sonar.java.source", "1.8"
            property "sonar.organization", "Sebastian"
            property "sonar.java.coveragePlugin", "jacoco"
            property "sonar.tests", "src/test"
            property "sonar.java.test.binaries", "build/classes/java/test"
            property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"

        }
    }
}

subprojects {
    sonarqube {
        properties {
            property "sonar.sources", "src"
        }
    }
}